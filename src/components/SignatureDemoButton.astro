---
import { signatureDemo } from '../core/index.js';
import { enqueueToast } from '../scripts/ui/toastQueue.js';

interface Props {
  audioBuffer?: AudioBuffer;
  ctx?: AudioContext;
  applyLoop?: (buffer: AudioBuffer, loop: any, op: string | undefined, subOps?: any) => void;
}

const { audioBuffer = undefined, ctx = undefined, applyLoop = undefined } = Astro.props;


async function runDemo() {
  if (!audioBuffer || typeof applyLoop !== 'function') return;
  const steps = signatureDemo(audioBuffer);
  for (const { fn, op } of steps) {
    const { buffer: newBuf, loop } = fn();
    enqueueToast(op);
    applyLoop(newBuf, loop, op);
    await new Promise((r) => setTimeout(r, 400));
  }
}
---
<button class="sig-demo" id="sigDemoBtn">
  ðŸš€ Signature Demo
</button>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const btn = document.getElementById('sigDemoBtn');
    btn?.addEventListener('click', () => {
      if (!audioBuffer || typeof applyLoop !== 'function') return;
      runDemo(audioBuffer, applyLoop);
    });
  });
</script>


<style>
.sig-demo { margin-top: .5rem; padding: .4rem .8rem; background: var(--accent); }
</style>
