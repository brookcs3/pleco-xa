---
import { signatureDemo } from '../core/index.js';
import { enqueueToast } from '../scripts/ui/toastQueue.js';

interface Props {
  audioBuffer: AudioBuffer | null;
  ctx: AudioContext | null;
  applyLoop: (buf: AudioBuffer, loop: any, op: string) => void;
}

const { audioBuffer = null, ctx = null, applyLoop } = Astro.props;

async function runDemo() {
  if (!audioBuffer || typeof applyLoop !== 'function') return;
  const steps = signatureDemo(audioBuffer);
  for (const { fn, op } of steps) {
    const { buffer: newBuf, loop } = fn();
    enqueueToast(op);
    applyLoop(newBuf, loop, op);
    await new Promise((r) => setTimeout(r, 400));
  }
}
---
<button
  class="sig-demo"
  id="sigDemoBtn"
  on:click={runDemo}
>
  ðŸš€ Signature Demo
</button>

<style>
.sig-demo { margin-top: .5rem; padding: .4rem .8rem; background: var(--accent); }
</style>
