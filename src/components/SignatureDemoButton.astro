---
import { signatureDemo } from '../core/index.js';

interface Props {
  audioBufferVar?: string;
  applyLoopVar?: string;
}

const { audioBufferVar = 'currentAudioBuffer', applyLoopVar = 'applyLoop' } = Astro.props;

async function runDemo(buffer, applyLoop) {
  const steps = signatureDemo(buffer);
  for (const { fn, op } of steps) {
    const { buffer: newBuf, loop } = fn();
    applyLoop(newBuf, loop, op);
    await new Promise((r) => setTimeout(r, 400));
  }
}
---
<button
  class="sig-demo"
  id="sigDemoBtn"
  data-buffer-var={audioBufferVar}
  data-apply-loop-var={applyLoopVar}
>
  ðŸš€ Signature Demo
</button>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const btn = document.getElementById('sigDemoBtn');
    btn?.addEventListener('click', () => {
      const buffer = window[btn.dataset.bufferVar];
      const applyLoop = window[btn.dataset.applyLoopVar];
      if (!buffer || typeof applyLoop !== 'function') return;
      runDemo(buffer, applyLoop);
    });
  });
</script>

<style>
.sig-demo { margin-top: .5rem; padding: .4rem .8rem; background: var(--accent); }
</style>
